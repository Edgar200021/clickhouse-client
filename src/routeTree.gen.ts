/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegularLayoutRouteImport } from './routes/_regularLayout'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as RegularLayoutIndexRouteImport } from './routes/_regularLayout/index'
import { Route as RegularLayoutAuthRouteRouteImport } from './routes/_regularLayout/auth/route'
import { Route as RegularLayoutCatalogCatalogPathRouteImport } from './routes/_regularLayout/catalog/$catalogPath'
import { Route as RegularLayoutAuthResetPasswordRouteImport } from './routes/_regularLayout/auth/reset-password'
import { Route as RegularLayoutAuthAccountVerificationRouteImport } from './routes/_regularLayout/auth/account-verification'

const RegularLayoutPaymentLazyRouteImport = createFileRoute(
  '/_regularLayout/payment',
)()
const RegularLayoutDeliveryLazyRouteImport = createFileRoute(
  '/_regularLayout/delivery',
)()
const RegularLayoutContactsLazyRouteImport = createFileRoute(
  '/_regularLayout/contacts',
)()
const RegularLayoutConditionsLazyRouteImport = createFileRoute(
  '/_regularLayout/conditions',
)()
const RegularLayoutCatalogRouteLazyRouteImport = createFileRoute(
  '/_regularLayout/catalog',
)()
const AuthenticatedAdminRouteLazyRouteImport = createFileRoute(
  '/_authenticated/admin',
)()
const AuthenticatedAdminIndexLazyRouteImport = createFileRoute(
  '/_authenticated/admin/',
)()
const RegularLayoutAuthSignUpLazyRouteImport = createFileRoute(
  '/_regularLayout/auth/sign-up',
)()
const RegularLayoutAuthSignInLazyRouteImport = createFileRoute(
  '/_regularLayout/auth/sign-in',
)()
const RegularLayoutAuthForgotPasswordLazyRouteImport = createFileRoute(
  '/_regularLayout/auth/forgot-password',
)()
const RegularLayoutAuthenticatedProfileLazyRouteImport = createFileRoute(
  '/_regularLayout/_authenticated/profile',
)()
const RegularLayoutAuthenticatedFavoriteLazyRouteImport = createFileRoute(
  '/_regularLayout/_authenticated/favorite',
)()
const RegularLayoutAuthenticatedBasketLazyRouteImport = createFileRoute(
  '/_regularLayout/_authenticated/basket',
)()
const AuthenticatedAdminProductsIndexLazyRouteImport = createFileRoute(
  '/_authenticated/admin/products/',
)()
const AuthenticatedAdminCategoriesIndexLazyRouteImport = createFileRoute(
  '/_authenticated/admin/categories/',
)()
const AuthenticatedAdminProductsUpdateLazyRouteImport = createFileRoute(
  '/_authenticated/admin/products/update',
)()
const AuthenticatedAdminProductsCreateLazyRouteImport = createFileRoute(
  '/_authenticated/admin/products/create',
)()
const AuthenticatedAdminCategoriesCreateLazyRouteImport = createFileRoute(
  '/_authenticated/admin/categories/create',
)()
const AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRouteImport =
  createFileRoute('/_authenticated/admin/categories/update/{-$categoryId}')()

const RegularLayoutRoute = RegularLayoutRouteImport.update({
  id: '/_regularLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const RegularLayoutIndexRoute = RegularLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RegularLayoutRoute,
} as any)
const RegularLayoutPaymentLazyRoute =
  RegularLayoutPaymentLazyRouteImport.update({
    id: '/payment',
    path: '/payment',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/payment.lazy').then((d) => d.Route),
  )
const RegularLayoutDeliveryLazyRoute =
  RegularLayoutDeliveryLazyRouteImport.update({
    id: '/delivery',
    path: '/delivery',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/delivery.lazy').then((d) => d.Route),
  )
const RegularLayoutContactsLazyRoute =
  RegularLayoutContactsLazyRouteImport.update({
    id: '/contacts',
    path: '/contacts',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/contacts.lazy').then((d) => d.Route),
  )
const RegularLayoutConditionsLazyRoute =
  RegularLayoutConditionsLazyRouteImport.update({
    id: '/conditions',
    path: '/conditions',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/conditions.lazy').then((d) => d.Route),
  )
const RegularLayoutCatalogRouteLazyRoute =
  RegularLayoutCatalogRouteLazyRouteImport.update({
    id: '/catalog',
    path: '/catalog',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/catalog/route.lazy').then((d) => d.Route),
  )
const AuthenticatedAdminRouteLazyRoute =
  AuthenticatedAdminRouteLazyRouteImport.update({
    id: '/admin',
    path: '/admin',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/route.lazy').then((d) => d.Route),
  )
const RegularLayoutAuthRouteRoute = RegularLayoutAuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => RegularLayoutRoute,
} as any)
const AuthenticatedAdminIndexLazyRoute =
  AuthenticatedAdminIndexLazyRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/index.lazy').then((d) => d.Route),
  )
const RegularLayoutAuthSignUpLazyRoute =
  RegularLayoutAuthSignUpLazyRouteImport.update({
    id: '/sign-up',
    path: '/sign-up',
    getParentRoute: () => RegularLayoutAuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/auth/sign-up.lazy').then((d) => d.Route),
  )
const RegularLayoutAuthSignInLazyRoute =
  RegularLayoutAuthSignInLazyRouteImport.update({
    id: '/sign-in',
    path: '/sign-in',
    getParentRoute: () => RegularLayoutAuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/auth/sign-in.lazy').then((d) => d.Route),
  )
const RegularLayoutAuthForgotPasswordLazyRoute =
  RegularLayoutAuthForgotPasswordLazyRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => RegularLayoutAuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/auth/forgot-password.lazy').then(
      (d) => d.Route,
    ),
  )
const RegularLayoutAuthenticatedProfileLazyRoute =
  RegularLayoutAuthenticatedProfileLazyRouteImport.update({
    id: '/_authenticated/profile',
    path: '/profile',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/_authenticated/profile.lazy').then(
      (d) => d.Route,
    ),
  )
const RegularLayoutAuthenticatedFavoriteLazyRoute =
  RegularLayoutAuthenticatedFavoriteLazyRouteImport.update({
    id: '/_authenticated/favorite',
    path: '/favorite',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/_authenticated/favorite.lazy').then(
      (d) => d.Route,
    ),
  )
const RegularLayoutAuthenticatedBasketLazyRoute =
  RegularLayoutAuthenticatedBasketLazyRouteImport.update({
    id: '/_authenticated/basket',
    path: '/basket',
    getParentRoute: () => RegularLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_regularLayout/_authenticated/basket.lazy').then(
      (d) => d.Route,
    ),
  )
const RegularLayoutCatalogCatalogPathRoute =
  RegularLayoutCatalogCatalogPathRouteImport.update({
    id: '/$catalogPath',
    path: '/$catalogPath',
    getParentRoute: () => RegularLayoutCatalogRouteLazyRoute,
  } as any)
const RegularLayoutAuthResetPasswordRoute =
  RegularLayoutAuthResetPasswordRouteImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => RegularLayoutAuthRouteRoute,
  } as any)
const RegularLayoutAuthAccountVerificationRoute =
  RegularLayoutAuthAccountVerificationRouteImport.update({
    id: '/account-verification',
    path: '/account-verification',
    getParentRoute: () => RegularLayoutAuthRouteRoute,
  } as any)
const AuthenticatedAdminProductsIndexLazyRoute =
  AuthenticatedAdminProductsIndexLazyRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/products/index.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedAdminCategoriesIndexLazyRoute =
  AuthenticatedAdminCategoriesIndexLazyRouteImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/categories/index.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedAdminProductsUpdateLazyRoute =
  AuthenticatedAdminProductsUpdateLazyRouteImport.update({
    id: '/products/update',
    path: '/products/update',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/products/update.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedAdminProductsCreateLazyRoute =
  AuthenticatedAdminProductsCreateLazyRouteImport.update({
    id: '/products/create',
    path: '/products/create',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/products/create.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedAdminCategoriesCreateLazyRoute =
  AuthenticatedAdminCategoriesCreateLazyRouteImport.update({
    id: '/categories/create',
    path: '/categories/create',
    getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/categories/create.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute =
  AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRouteImport.update(
    {
      id: '/categories/update/{-$categoryId}',
      path: '/categories/update/{-$categoryId}',
      getParentRoute: () => AuthenticatedAdminRouteLazyRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/_authenticated/admin/categories/update.{-$categoryId}.lazy'
    ).then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/auth': typeof RegularLayoutAuthRouteRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteLazyRouteWithChildren
  '/catalog': typeof RegularLayoutCatalogRouteLazyRouteWithChildren
  '/conditions': typeof RegularLayoutConditionsLazyRoute
  '/contacts': typeof RegularLayoutContactsLazyRoute
  '/delivery': typeof RegularLayoutDeliveryLazyRoute
  '/payment': typeof RegularLayoutPaymentLazyRoute
  '/': typeof RegularLayoutIndexRoute
  '/auth/account-verification': typeof RegularLayoutAuthAccountVerificationRoute
  '/auth/reset-password': typeof RegularLayoutAuthResetPasswordRoute
  '/catalog/$catalogPath': typeof RegularLayoutCatalogCatalogPathRoute
  '/basket': typeof RegularLayoutAuthenticatedBasketLazyRoute
  '/favorite': typeof RegularLayoutAuthenticatedFavoriteLazyRoute
  '/profile': typeof RegularLayoutAuthenticatedProfileLazyRoute
  '/auth/forgot-password': typeof RegularLayoutAuthForgotPasswordLazyRoute
  '/auth/sign-in': typeof RegularLayoutAuthSignInLazyRoute
  '/auth/sign-up': typeof RegularLayoutAuthSignUpLazyRoute
  '/admin/': typeof AuthenticatedAdminIndexLazyRoute
  '/admin/categories/create': typeof AuthenticatedAdminCategoriesCreateLazyRoute
  '/admin/products/create': typeof AuthenticatedAdminProductsCreateLazyRoute
  '/admin/products/update': typeof AuthenticatedAdminProductsUpdateLazyRoute
  '/admin/categories': typeof AuthenticatedAdminCategoriesIndexLazyRoute
  '/admin/products': typeof AuthenticatedAdminProductsIndexLazyRoute
  '/admin/categories/update/{-$categoryId}': typeof AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute
}
export interface FileRoutesByTo {
  '/auth': typeof RegularLayoutAuthRouteRouteWithChildren
  '/catalog': typeof RegularLayoutCatalogRouteLazyRouteWithChildren
  '/conditions': typeof RegularLayoutConditionsLazyRoute
  '/contacts': typeof RegularLayoutContactsLazyRoute
  '/delivery': typeof RegularLayoutDeliveryLazyRoute
  '/payment': typeof RegularLayoutPaymentLazyRoute
  '/': typeof RegularLayoutIndexRoute
  '/auth/account-verification': typeof RegularLayoutAuthAccountVerificationRoute
  '/auth/reset-password': typeof RegularLayoutAuthResetPasswordRoute
  '/catalog/$catalogPath': typeof RegularLayoutCatalogCatalogPathRoute
  '/basket': typeof RegularLayoutAuthenticatedBasketLazyRoute
  '/favorite': typeof RegularLayoutAuthenticatedFavoriteLazyRoute
  '/profile': typeof RegularLayoutAuthenticatedProfileLazyRoute
  '/auth/forgot-password': typeof RegularLayoutAuthForgotPasswordLazyRoute
  '/auth/sign-in': typeof RegularLayoutAuthSignInLazyRoute
  '/auth/sign-up': typeof RegularLayoutAuthSignUpLazyRoute
  '/admin': typeof AuthenticatedAdminIndexLazyRoute
  '/admin/categories/create': typeof AuthenticatedAdminCategoriesCreateLazyRoute
  '/admin/products/create': typeof AuthenticatedAdminProductsCreateLazyRoute
  '/admin/products/update': typeof AuthenticatedAdminProductsUpdateLazyRoute
  '/admin/categories': typeof AuthenticatedAdminCategoriesIndexLazyRoute
  '/admin/products': typeof AuthenticatedAdminProductsIndexLazyRoute
  '/admin/categories/update/{-$categoryId}': typeof AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_regularLayout': typeof RegularLayoutRouteWithChildren
  '/_regularLayout/auth': typeof RegularLayoutAuthRouteRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteLazyRouteWithChildren
  '/_regularLayout/catalog': typeof RegularLayoutCatalogRouteLazyRouteWithChildren
  '/_regularLayout/conditions': typeof RegularLayoutConditionsLazyRoute
  '/_regularLayout/contacts': typeof RegularLayoutContactsLazyRoute
  '/_regularLayout/delivery': typeof RegularLayoutDeliveryLazyRoute
  '/_regularLayout/payment': typeof RegularLayoutPaymentLazyRoute
  '/_regularLayout/': typeof RegularLayoutIndexRoute
  '/_regularLayout/auth/account-verification': typeof RegularLayoutAuthAccountVerificationRoute
  '/_regularLayout/auth/reset-password': typeof RegularLayoutAuthResetPasswordRoute
  '/_regularLayout/catalog/$catalogPath': typeof RegularLayoutCatalogCatalogPathRoute
  '/_regularLayout/_authenticated/basket': typeof RegularLayoutAuthenticatedBasketLazyRoute
  '/_regularLayout/_authenticated/favorite': typeof RegularLayoutAuthenticatedFavoriteLazyRoute
  '/_regularLayout/_authenticated/profile': typeof RegularLayoutAuthenticatedProfileLazyRoute
  '/_regularLayout/auth/forgot-password': typeof RegularLayoutAuthForgotPasswordLazyRoute
  '/_regularLayout/auth/sign-in': typeof RegularLayoutAuthSignInLazyRoute
  '/_regularLayout/auth/sign-up': typeof RegularLayoutAuthSignUpLazyRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexLazyRoute
  '/_authenticated/admin/categories/create': typeof AuthenticatedAdminCategoriesCreateLazyRoute
  '/_authenticated/admin/products/create': typeof AuthenticatedAdminProductsCreateLazyRoute
  '/_authenticated/admin/products/update': typeof AuthenticatedAdminProductsUpdateLazyRoute
  '/_authenticated/admin/categories/': typeof AuthenticatedAdminCategoriesIndexLazyRoute
  '/_authenticated/admin/products/': typeof AuthenticatedAdminProductsIndexLazyRoute
  '/_authenticated/admin/categories/update/{-$categoryId}': typeof AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/admin'
    | '/catalog'
    | '/conditions'
    | '/contacts'
    | '/delivery'
    | '/payment'
    | '/'
    | '/auth/account-verification'
    | '/auth/reset-password'
    | '/catalog/$catalogPath'
    | '/basket'
    | '/favorite'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/admin/'
    | '/admin/categories/create'
    | '/admin/products/create'
    | '/admin/products/update'
    | '/admin/categories'
    | '/admin/products'
    | '/admin/categories/update/{-$categoryId}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/catalog'
    | '/conditions'
    | '/contacts'
    | '/delivery'
    | '/payment'
    | '/'
    | '/auth/account-verification'
    | '/auth/reset-password'
    | '/catalog/$catalogPath'
    | '/basket'
    | '/favorite'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/admin'
    | '/admin/categories/create'
    | '/admin/products/create'
    | '/admin/products/update'
    | '/admin/categories'
    | '/admin/products'
    | '/admin/categories/update/{-$categoryId}'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_regularLayout'
    | '/_regularLayout/auth'
    | '/_authenticated/admin'
    | '/_regularLayout/catalog'
    | '/_regularLayout/conditions'
    | '/_regularLayout/contacts'
    | '/_regularLayout/delivery'
    | '/_regularLayout/payment'
    | '/_regularLayout/'
    | '/_regularLayout/auth/account-verification'
    | '/_regularLayout/auth/reset-password'
    | '/_regularLayout/catalog/$catalogPath'
    | '/_regularLayout/_authenticated/basket'
    | '/_regularLayout/_authenticated/favorite'
    | '/_regularLayout/_authenticated/profile'
    | '/_regularLayout/auth/forgot-password'
    | '/_regularLayout/auth/sign-in'
    | '/_regularLayout/auth/sign-up'
    | '/_authenticated/admin/'
    | '/_authenticated/admin/categories/create'
    | '/_authenticated/admin/products/create'
    | '/_authenticated/admin/products/update'
    | '/_authenticated/admin/categories/'
    | '/_authenticated/admin/products/'
    | '/_authenticated/admin/categories/update/{-$categoryId}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  RegularLayoutRoute: typeof RegularLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_regularLayout': {
      id: '/_regularLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RegularLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_regularLayout/': {
      id: '/_regularLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RegularLayoutIndexRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/payment': {
      id: '/_regularLayout/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof RegularLayoutPaymentLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/delivery': {
      id: '/_regularLayout/delivery'
      path: '/delivery'
      fullPath: '/delivery'
      preLoaderRoute: typeof RegularLayoutDeliveryLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/contacts': {
      id: '/_regularLayout/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof RegularLayoutContactsLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/conditions': {
      id: '/_regularLayout/conditions'
      path: '/conditions'
      fullPath: '/conditions'
      preLoaderRoute: typeof RegularLayoutConditionsLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/catalog': {
      id: '/_regularLayout/catalog'
      path: '/catalog'
      fullPath: '/catalog'
      preLoaderRoute: typeof RegularLayoutCatalogRouteLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteLazyRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_regularLayout/auth': {
      id: '/_regularLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof RegularLayoutAuthRouteRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_regularLayout/auth/sign-up': {
      id: '/_regularLayout/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof RegularLayoutAuthSignUpLazyRouteImport
      parentRoute: typeof RegularLayoutAuthRouteRoute
    }
    '/_regularLayout/auth/sign-in': {
      id: '/_regularLayout/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof RegularLayoutAuthSignInLazyRouteImport
      parentRoute: typeof RegularLayoutAuthRouteRoute
    }
    '/_regularLayout/auth/forgot-password': {
      id: '/_regularLayout/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof RegularLayoutAuthForgotPasswordLazyRouteImport
      parentRoute: typeof RegularLayoutAuthRouteRoute
    }
    '/_regularLayout/_authenticated/profile': {
      id: '/_regularLayout/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof RegularLayoutAuthenticatedProfileLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/_authenticated/favorite': {
      id: '/_regularLayout/_authenticated/favorite'
      path: '/favorite'
      fullPath: '/favorite'
      preLoaderRoute: typeof RegularLayoutAuthenticatedFavoriteLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/_authenticated/basket': {
      id: '/_regularLayout/_authenticated/basket'
      path: '/basket'
      fullPath: '/basket'
      preLoaderRoute: typeof RegularLayoutAuthenticatedBasketLazyRouteImport
      parentRoute: typeof RegularLayoutRoute
    }
    '/_regularLayout/catalog/$catalogPath': {
      id: '/_regularLayout/catalog/$catalogPath'
      path: '/$catalogPath'
      fullPath: '/catalog/$catalogPath'
      preLoaderRoute: typeof RegularLayoutCatalogCatalogPathRouteImport
      parentRoute: typeof RegularLayoutCatalogRouteLazyRoute
    }
    '/_regularLayout/auth/reset-password': {
      id: '/_regularLayout/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof RegularLayoutAuthResetPasswordRouteImport
      parentRoute: typeof RegularLayoutAuthRouteRoute
    }
    '/_regularLayout/auth/account-verification': {
      id: '/_regularLayout/auth/account-verification'
      path: '/account-verification'
      fullPath: '/auth/account-verification'
      preLoaderRoute: typeof RegularLayoutAuthAccountVerificationRouteImport
      parentRoute: typeof RegularLayoutAuthRouteRoute
    }
    '/_authenticated/admin/products/': {
      id: '/_authenticated/admin/products/'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AuthenticatedAdminProductsIndexLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_authenticated/admin/categories/': {
      id: '/_authenticated/admin/categories/'
      path: '/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AuthenticatedAdminCategoriesIndexLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_authenticated/admin/products/update': {
      id: '/_authenticated/admin/products/update'
      path: '/products/update'
      fullPath: '/admin/products/update'
      preLoaderRoute: typeof AuthenticatedAdminProductsUpdateLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_authenticated/admin/products/create': {
      id: '/_authenticated/admin/products/create'
      path: '/products/create'
      fullPath: '/admin/products/create'
      preLoaderRoute: typeof AuthenticatedAdminProductsCreateLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_authenticated/admin/categories/create': {
      id: '/_authenticated/admin/categories/create'
      path: '/categories/create'
      fullPath: '/admin/categories/create'
      preLoaderRoute: typeof AuthenticatedAdminCategoriesCreateLazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
    '/_authenticated/admin/categories/update/{-$categoryId}': {
      id: '/_authenticated/admin/categories/update/{-$categoryId}'
      path: '/categories/update/{-$categoryId}'
      fullPath: '/admin/categories/update/{-$categoryId}'
      preLoaderRoute: typeof AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRouteImport
      parentRoute: typeof AuthenticatedAdminRouteLazyRoute
    }
  }
}

interface AuthenticatedAdminRouteLazyRouteChildren {
  AuthenticatedAdminIndexLazyRoute: typeof AuthenticatedAdminIndexLazyRoute
  AuthenticatedAdminCategoriesCreateLazyRoute: typeof AuthenticatedAdminCategoriesCreateLazyRoute
  AuthenticatedAdminProductsCreateLazyRoute: typeof AuthenticatedAdminProductsCreateLazyRoute
  AuthenticatedAdminProductsUpdateLazyRoute: typeof AuthenticatedAdminProductsUpdateLazyRoute
  AuthenticatedAdminCategoriesIndexLazyRoute: typeof AuthenticatedAdminCategoriesIndexLazyRoute
  AuthenticatedAdminProductsIndexLazyRoute: typeof AuthenticatedAdminProductsIndexLazyRoute
  AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute: typeof AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute
}

const AuthenticatedAdminRouteLazyRouteChildren: AuthenticatedAdminRouteLazyRouteChildren =
  {
    AuthenticatedAdminIndexLazyRoute: AuthenticatedAdminIndexLazyRoute,
    AuthenticatedAdminCategoriesCreateLazyRoute:
      AuthenticatedAdminCategoriesCreateLazyRoute,
    AuthenticatedAdminProductsCreateLazyRoute:
      AuthenticatedAdminProductsCreateLazyRoute,
    AuthenticatedAdminProductsUpdateLazyRoute:
      AuthenticatedAdminProductsUpdateLazyRoute,
    AuthenticatedAdminCategoriesIndexLazyRoute:
      AuthenticatedAdminCategoriesIndexLazyRoute,
    AuthenticatedAdminProductsIndexLazyRoute:
      AuthenticatedAdminProductsIndexLazyRoute,
    AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute:
      AuthenticatedAdminCategoriesUpdateChar123CategoryIdChar125LazyRoute,
  }

const AuthenticatedAdminRouteLazyRouteWithChildren =
  AuthenticatedAdminRouteLazyRoute._addFileChildren(
    AuthenticatedAdminRouteLazyRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRouteLazyRoute: typeof AuthenticatedAdminRouteLazyRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRouteLazyRoute:
    AuthenticatedAdminRouteLazyRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface RegularLayoutAuthRouteRouteChildren {
  RegularLayoutAuthAccountVerificationRoute: typeof RegularLayoutAuthAccountVerificationRoute
  RegularLayoutAuthResetPasswordRoute: typeof RegularLayoutAuthResetPasswordRoute
  RegularLayoutAuthForgotPasswordLazyRoute: typeof RegularLayoutAuthForgotPasswordLazyRoute
  RegularLayoutAuthSignInLazyRoute: typeof RegularLayoutAuthSignInLazyRoute
  RegularLayoutAuthSignUpLazyRoute: typeof RegularLayoutAuthSignUpLazyRoute
}

const RegularLayoutAuthRouteRouteChildren: RegularLayoutAuthRouteRouteChildren =
  {
    RegularLayoutAuthAccountVerificationRoute:
      RegularLayoutAuthAccountVerificationRoute,
    RegularLayoutAuthResetPasswordRoute: RegularLayoutAuthResetPasswordRoute,
    RegularLayoutAuthForgotPasswordLazyRoute:
      RegularLayoutAuthForgotPasswordLazyRoute,
    RegularLayoutAuthSignInLazyRoute: RegularLayoutAuthSignInLazyRoute,
    RegularLayoutAuthSignUpLazyRoute: RegularLayoutAuthSignUpLazyRoute,
  }

const RegularLayoutAuthRouteRouteWithChildren =
  RegularLayoutAuthRouteRoute._addFileChildren(
    RegularLayoutAuthRouteRouteChildren,
  )

interface RegularLayoutCatalogRouteLazyRouteChildren {
  RegularLayoutCatalogCatalogPathRoute: typeof RegularLayoutCatalogCatalogPathRoute
}

const RegularLayoutCatalogRouteLazyRouteChildren: RegularLayoutCatalogRouteLazyRouteChildren =
  {
    RegularLayoutCatalogCatalogPathRoute: RegularLayoutCatalogCatalogPathRoute,
  }

const RegularLayoutCatalogRouteLazyRouteWithChildren =
  RegularLayoutCatalogRouteLazyRoute._addFileChildren(
    RegularLayoutCatalogRouteLazyRouteChildren,
  )

interface RegularLayoutRouteChildren {
  RegularLayoutAuthRouteRoute: typeof RegularLayoutAuthRouteRouteWithChildren
  RegularLayoutCatalogRouteLazyRoute: typeof RegularLayoutCatalogRouteLazyRouteWithChildren
  RegularLayoutConditionsLazyRoute: typeof RegularLayoutConditionsLazyRoute
  RegularLayoutContactsLazyRoute: typeof RegularLayoutContactsLazyRoute
  RegularLayoutDeliveryLazyRoute: typeof RegularLayoutDeliveryLazyRoute
  RegularLayoutPaymentLazyRoute: typeof RegularLayoutPaymentLazyRoute
  RegularLayoutIndexRoute: typeof RegularLayoutIndexRoute
  RegularLayoutAuthenticatedBasketLazyRoute: typeof RegularLayoutAuthenticatedBasketLazyRoute
  RegularLayoutAuthenticatedFavoriteLazyRoute: typeof RegularLayoutAuthenticatedFavoriteLazyRoute
  RegularLayoutAuthenticatedProfileLazyRoute: typeof RegularLayoutAuthenticatedProfileLazyRoute
}

const RegularLayoutRouteChildren: RegularLayoutRouteChildren = {
  RegularLayoutAuthRouteRoute: RegularLayoutAuthRouteRouteWithChildren,
  RegularLayoutCatalogRouteLazyRoute:
    RegularLayoutCatalogRouteLazyRouteWithChildren,
  RegularLayoutConditionsLazyRoute: RegularLayoutConditionsLazyRoute,
  RegularLayoutContactsLazyRoute: RegularLayoutContactsLazyRoute,
  RegularLayoutDeliveryLazyRoute: RegularLayoutDeliveryLazyRoute,
  RegularLayoutPaymentLazyRoute: RegularLayoutPaymentLazyRoute,
  RegularLayoutIndexRoute: RegularLayoutIndexRoute,
  RegularLayoutAuthenticatedBasketLazyRoute:
    RegularLayoutAuthenticatedBasketLazyRoute,
  RegularLayoutAuthenticatedFavoriteLazyRoute:
    RegularLayoutAuthenticatedFavoriteLazyRoute,
  RegularLayoutAuthenticatedProfileLazyRoute:
    RegularLayoutAuthenticatedProfileLazyRoute,
}

const RegularLayoutRouteWithChildren = RegularLayoutRoute._addFileChildren(
  RegularLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  RegularLayoutRoute: RegularLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
